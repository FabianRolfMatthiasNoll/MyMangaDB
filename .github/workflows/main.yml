name: Build MyMangaDB

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install platform-specific dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install python3-gi python3-gi-cairo gir1.2-gtk-3.0 gir1.2-webkit2-3.0

      - name: Install platform-specific dependencies (macOS)
        if: runner.os == 'macOS'
        run: pip install PyObjC

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm install
          if ("${{ runner.os }}" -eq 'Windows') {
            $env:CI="false"
            npm run build:ci:win
          } else {
            npm run build:ci:other
          }
        shell: pwsh
        env:
          CI: false
        
      - name: Build with PyInstaller
        run: |
          if ("${{ runner.os }}" -eq 'Windows') {
            pyinstaller main.py --onefile --noconsole --add-data="./frontend/build;build" --name MyMangaDB
          } else {
            pyinstaller main.py --onefile --noconsole --add-data="./frontend/build:build" --name MyMangaDB
          }
        shell: pwsh
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-build
          path: ./dist/*
